on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    env:
      AWS_EC2_REGION: ap-northeast-2
      ECR_REGION: us-east-1

      EC2_IP_ADDRESS: 13.125.198.146

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR Puublic
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REGISTRY_ALIAS: v4p4c1q3
          ECR_REPOSITORY: gyminwear
          IMAGE_TAG: ${{ github.sha }}

        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy on EC2 instance
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_IP_ADDRESS }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd ./Gyminwear/gym
            sudo docker pull $ECR_REGISTRY/$ECR_REGISTY_ALIAS/$ECR_REPOSITORY:latest
            sudo docker run -d -p 3000:3000 $ECR_REGISTRY/$ECR_REGISTY_ALIAS/$ECR_REPOSITORY:latest
